generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Enrollment {
  id          String           @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt   DateTime         @default(now()) @db.Timestamp(6)
  updatedAt   DateTime         @db.Timestamp(6)
  courseId    String          @db.VarChar
  userId      String          @db.VarChar
  status      EnrollmentStatus @default(PENDING)
  completedAt DateTime?       @db.Timestamp(6)
  isFree      Boolean         @default(false)
  Payment     Payment?

  @@unique([userId, courseId])
}

model Payment {
  id              String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt       DateTime      @default(now()) @db.Timestamp(6)
  updatedAt       DateTime      @db.Timestamp(6)
  amount          Float
  status          PaymentStatus @default(PENDING)
  
  // PayOS fields
  payosOrderId    String?       @unique @db.VarChar
  payosTransId    String?       @unique @db.VarChar
  orderCode       String        @unique @db.VarChar
  
  enrollmentId    String        @unique @db.Uuid
  Enrollment      Enrollment    @relation(fields: [enrollmentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

enum EnrollmentStatus {
  PENDING    // Chờ thanh toán hoặc xác nhận
  ACTIVE     // Đang học
  COMPLETED  // Hoàn thành
  CANCELLED  // Đã hủy
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
  CANCELLED
  EXPIRED
}